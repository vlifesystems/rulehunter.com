<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rulehunter - Find simple rules in your data to meet your goals</title>
    <link>http://rulehunter.com/</link>
    <description>Recent content on Rulehunter - Find simple rules in your data to meet your goals</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://rulehunter.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview</title>
      <link>http://rulehunter.com/docs/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/overview/</guid>
      <description>Welcome This site aims to be a comprehensive guide to Rulehunter. It will cover how to get Rulehunter up &amp;amp; running, examples of use and how to make the most of it.
Overview of Rulehunter Rulehunter works through a series of experiments located in the experimentsDir specified in config.yaml. It will process each experiment and output a report in html. The html report is part of a website created in the wwwDir specified in config.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>http://rulehunter.com/docs/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/installation/</guid>
      <description>Rulehunter has prebuilt binaries for Linux, Windows and MacOS. Please download the latest release from the bottom of the releases page.
Once downloaded unzip the file and place the rulehunter executable somewhere that it can easily be run.
There are several files needed to render the html properly, these are located in the support/ directory.
Twitter Bootstrap Copy directories from support/bootstrap to the wwwDir directory specified in config.yaml.
jQuery Copy directory support/jquery/js to the wwwDir directory specified in config.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>http://rulehunter.com/docs/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/configuration/</guid>
      <description>Rulehunter is configured using a config.yaml file as follows: # The location of the experiment files. experimentsDir: &amp;quot;/usr/local/rulehunter/experiments&amp;quot; # The location of the html files produced. wwwDir: &amp;quot;/var/www/rulehunter&amp;quot; # The location of the build files created while running. A temporary copy # of each Dataset will be stored in a &amp;#39;tmp&amp;#39; sub-directory while being # processed. buildDir: &amp;quot;/usr/local/rulehunter/build&amp;quot; # The base URL for the html files produced. This is so that you could for # example base the Rulehunter generated site at &amp;#39;/rulehunter/&amp;#39; on an intranet.</description>
    </item>
    
    <item>
      <title>Experiments</title>
      <link>http://rulehunter.com/docs/experiments/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/experiments/</guid>
      <description>An Experiment file An experiment is what describes the dataset that you want to process and what you want the generated rules to aim for. Each experiment is described by a .yaml or a .json file located in the experimentsDir of config.yaml. This will look as follows:
# The title of the report title: &amp;quot;Whatwouldindicategoodflow?&amp;quot; # The category that this report is in category: &amp;quot;acme&amp;quot; # The tags associated with the report tags: - test - &amp;quot;householdsewage&amp;quot; # The dataset to used to train the rule discovery process trainDataset: # Describe a CSV dataset csv: # The name of the CSV file filename: &amp;quot;fixtures/flow.</description>
    </item>
    
    <item>
      <title>Examples Included</title>
      <link>http://rulehunter.com/docs/examples/examples_included/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/examples/examples_included/</guid>
      <description>Included Experiments The examples/ directory of the repository contains a number of experiments, in examples/experiments/, to demonstrate how Rulehunter can be used:
acmeprinters_repair016_who_should_call_which_segment.yaml A call centre is representing a client that wants to offer a repair contract to customers who have bought printers from them in the past. The call centre needs to balance its need to make a profit with the needs of their client. This is used in a worked example.</description>
    </item>
    
    <item>
      <title>Usage</title>
      <link>http://rulehunter.com/docs/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/usage/</guid>
      <description>Single Run To processes the experiments in the experimentsDir directory specified in config.yaml, which is located in the current directory: rulehunter  To specify a config file: rulehunter --config=/usr/local/rulehunter/config.yaml  To specify a single experiment file: rulehunter --file=experiments/diabetes.yaml  To ignore the when field in experiments and hence run experiments now: rulehunter --ignore-when  To get the version of Rulehunter: rulehunter version  To get help: rulehunter help  Server To run Rulehunter as a server continually checking and processing experiments: rulehunter serve  Service To install Rulehunter as an operating service (which then needs starting separately) using /usr/local/rulehunter/config.</description>
    </item>
    
    <item>
      <title>Processing the Examples</title>
      <link>http://rulehunter.com/docs/examples/processing_the_examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/examples/processing_the_examples/</guid>
      <description>Using the Examples The example experiments demonstrate well how Rulehunter works. Once you have run them you can tinker with them and compare the results.
Preparing the www Directory Before running rulehunter on the experiments you need to initialize the www directory.
For Linux/MacOS:
chmod +x examples/bin/init_www_unix.sh examples/bin/init_www_unix.sh  For Windows:
examples\bin\init_www_windows.bat  Processing the Experiments To process the experiments run rulehunter from the examples/ directory:
rulehunter  To process a single experiment run rulehunter with the --file flag from the examples/ directory.</description>
    </item>
    
    <item>
      <title>A Call Centre: Printer Repairs</title>
      <link>http://rulehunter.com/docs/examples/call_centre_printer_repairs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/examples/call_centre_printer_repairs/</guid>
      <description>Outline A call centre is representing a client that wants to offer a repair contract to customers who have bought printers from them in the past. The call centre needs to balance its need to make a profit with the needs of their client.
The client&amp;rsquo;s requirements  The ROI (Return On Investment) must be at least 15.0 At least 25% of contacts must result in a repair contract They would like the total value of contracts to be as high as possible  The call centre&amp;rsquo;s requirements  The ROI for the call centre needs to be at least 1.</description>
    </item>
    
    <item>
      <title>Bank Term Deposit Subscription</title>
      <link>http://rulehunter.com/docs/examples/bank_subscribe_term_deposit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/examples/bank_subscribe_term_deposit/</guid>
      <description>Outline A Portuguese bank wants to encourage customers to subscribe to a term deposit.
Requirements  The bank wants to reduce the number of customers it contacts. Therefore it wants to ensure that those it does contact are most likely to subscribe to a term deposit.  The Dataset This example uses a dataset related to a direct marketing campaign run by a Portuguese Bank. The dataset is described by [Moro et al.</description>
    </item>
    
    <item>
      <title>Breast Cancer Diagnosis</title>
      <link>http://rulehunter.com/docs/examples/breast_cancer_diagnosis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/examples/breast_cancer_diagnosis/</guid>
      <description>Outline The following is a hypothetical scenario used purely to demonstrate Rulehunter. The results shouldn&amp;rsquo;t be used in any real-world setting.
A group of doctors want to find out what indicates that a patient is likely to have breast cancer. They want to reduce the chance that a patient with breast cancer is miss diagnosed and increase the speed with which letters are sent out for patients to have further investigation.</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>http://rulehunter.com/docs/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/contributing/</guid>
      <description>Code Rulehunter is licensed under an MIT Licence. Please see the licence section for more details.
Rulehunter is written in Go and the project repo is on GitHub. Please see the Contributing Guide for more details.
If you find a bug, please report it at the project&amp;rsquo;s issues tracker also on GitHub.
Documentation Documentation is really important to us and is kept centrally on this website. The content is licensed under a Creative Commons Attribution 4.</description>
    </item>
    
    <item>
      <title>Steel Plate Fault</title>
      <link>http://rulehunter.com/docs/examples/steel_plate_fault/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/examples/steel_plate_fault/</guid>
      <description>Outline A quality control office wants to use machine learning to improve its detection of k scratch faults.
Requirements  The detection of the k scratch faults must be as accurate as possible  The Dataset This example uses a dataset provided by Semeion, Research Center of Sciences of Communication, Via Sersale 117, 00128, Rome, Italy. It is hosted at:
UCI Machine Learning Repository.
Irvine, CA: University of California, School of Information and Computer Science.</description>
    </item>
    
    <item>
      <title>Licence</title>
      <link>http://rulehunter.com/docs/licence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/docs/licence/</guid>
      <description>Copyright &amp;copy; 2016-2018 vLife Systems Ltd
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</description>
    </item>
    
    <item>
      <title>Rulehunter v0.1 Released</title>
      <link>http://rulehunter.com/news/2017/07/10/rulehunter-v0.1-released/</link>
      <pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>http://rulehunter.com/news/2017/07/10/rulehunter-v0.1-released/</guid>
      <description>The first official version of Rulehunter has been released. It is fully functional and has been tested on Linux and Windows. It is available to install and run immediately.</description>
    </item>
    
  </channel>
</rss>